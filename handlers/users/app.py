from main import *
from aiogram.dispatcher.filters.builtin import CommandStart
from utils.funk_async import *
from filter.admin import IsAdmin
from utils.funk_async_domovik import *

from utils.privacy import privacy
from fsm.fsm import start_domovik, start_feedback, start_car_sub_unit, update_user_domovik


# admin


@dp.message_handler(commands=['admin'])
async def command_start(message: types.Message):
    if not await IsAdmin().check(message):
        if not db.why_get_admin(message.from_user.id):
            db.get_admin(message.from_user.id, True)
            await message.answer('‚ö†Ô∏è –í—Ö–æ–¥ –≤ –∞–¥–º–∏–Ω —Ä–µ–∂–∏–º ‚ö†Ô∏è', reply_markup=keyboard_admin)
        else:
            db.get_admin(message.from_user.id, False)
            await message.answer('‚ùå –í—ã—Ö–æ–¥ –∏–∑ –∞–¥–º–∏–Ω —Ä–µ–∂–∏–º–∞ ‚ùå', reply_markup=keyboard_main_domovik)
    else:
        db.get_admin(message.from_user.id, False)
        await message.answer('‚ùå –í—ã –Ω–µ –∞–¥–º–∏–Ω, –∫–æ–º–∞–Ω–¥–∞ –Ω–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å ‚ùå', reply_markup=keyboard_main_domovik)


# –û–ë—å—è–≤–ª–µ–Ω–∏—è –¥–ª—è –∞–ø—Ä—É–≤–∞ –æ—Ç –∞–¥–º–∏–Ω–∞

async def get_all_announcement_for_adm(message: types.Message):
    if not db.get_announcement_for_adm():
        await message.answer(f'‚ùå –ù–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π –¥–ª—è –∞–ø—Ä—É–≤–∞ ‚ÄºÔ∏è')
    else:
        for unp in db.get_announcement_for_adm():
            id, type_of_services, job_title, job_description, salary, phone, allow, _, _, _ = unp
            await message.answer(
                f"–¢–∏–ø: {type_of_services}\n–ù–∞–∑–≤–∞–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏: {job_title}\n–û–ø–∏—Å–∞–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏: {job_description}\nüí∞ –ó–∞—Ä–∞–±–æ—Ç–Ω–∞—è –ü–ª–∞—Ç–∞: {salary}\n‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {phone}",
                reply_markup=await get_confirm_announcement_admin(id))


async def get_all_resume_for_adm(message: types.Message):
    if not db.get_resume_for_adm():
        await message.answer(f'‚ùå –ù–µ—Ç —Ä–µ–∑—é–º–µ –¥–ª—è –∞–ø—Ä—É–≤–∞ ‚ÄºÔ∏è')
    else:
        for unp in db.get_resume_for_adm():
            id_resume, name, skills, area_of_residence, phone, allow, _, _, _ = unp
            await message.answer(
                f"üë§ –ò–º—è: {name}\nü™õ –ù–∞–≤—ã–∫–∏: {skills}\nüåç –†–∞–π–æ–Ω –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è: {area_of_residence}\n‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {phone}",
                reply_markup=await get_confirm_admin_resume(id_resume))


async def get_all_feedback_for_adm(message: types.Message):
    if not db.show_all_feedback():
        await message.answer(f'‚ùå –ù–µ—Ç –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ ‚ÄºÔ∏è')
    else:
        for unp in db.show_all_feedback():
            text = unp[0]
            await message.answer(
                f"ü™õ {text}\n")


# end admin


@dp.message_handler(CommandStart())
async def bot_start(message: types.Message):
    if db.check_subscriber(message.from_user.id):
        await message.answer(f'üîôüîô', reply_markup=keyboard_main_domovik)
    else:
        await message.answer(f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å , –ø—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é!!')
        await start_domovik(message)


async def error(message: types.Message):
    await message.delete()


async def send_privacy(message):
    await message.answer(f'{privacy}')


@dp.message_handler(content_types=['text'])
async def command_start_text(message: types.Message):
    data = {
        # –î–æ–º–æ–≤–∏–∫
        '–ú–æ–∏ —Å–æ—Å–µ–¥–∏': give_neighbors_card,
        '–ñ–ö–•': give_all_jkh,
        '–ö–∞—Ä—Ç–∞ —Ä–∞–π–æ–Ω–∞': geo,
        '–ö–∞—Ä—Ç–æ—á–∫–∏ —Å–æ—Å–µ–¥–µ–π': give_neighbors_card,
        '–ú–æ—è –∫–∞—Ä—Ç–æ—á–∫–∞': give_my_card,
        '–í–∞–∫–∞–Ω—Å–∏–∏': give_all_target_vacancy,
        '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ —Å–µ–±–µ': update_user_domovik,
        '–°–ø—Ä–∞–≤–∫–∞': start_feedback,
        '–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å': give_all_target_house,
        '–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –º–µ–Ω—è': give_all_target,
        '–ó–∞–∫–æ–Ω—ã': all_laws_jkh,
        '–ü–æ–¥–ø—ë—Ä –∞–≤—Ç–æ': start_car_sub_unit,

        # –ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å
        '–ü—Ä–∞–≤–∏–ª–∞ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –∏ –∫–æ–Ω—Ñ–µ–¥–∏—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å': give_keybord,
        '–°–¥–∞–µ—Ç—Å—è': show_all_rent,
        '–ó–∞—è–≤–∫–∏ –Ω–∞ –∞—Ä–µ–Ω–¥—É': rental_requests,
        '–ü—Ä–æ–¥–∞–µ—Ç—Å—è': show_all_sell,
        '–ú–æ–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø—Ä–æ–¥–∞–∂–∏': show_all_my_sell,
        '–ú–æ–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∞—Ä–µ–Ω–¥—ã': show_all_my_rent,
        '–ó–∞—è–≤–∫–∏ –Ω–∞ –ø–æ–∫—É–ø–∫—É': purchasing_request,
        '–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–µ–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏': konfendentsialnost,
        '–ü—Ä–∞–≤–∏–ª–∞ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è': rule,
        '–°—Ä–æ–∫–∏ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è': term,
        '–°–æ–∑–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ': dell_up,
        'üîô': bot_start,

        # –≤–∞–∫–∞–Ω—Å–∏–∏
        '–°–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π': all_my_announcement,
        '–ú–æ–∏ –æ–±—å—è–≤–ª–µ–Ω–∏—è': my_announcement,
        '–ú–æ–µ –†–µ–∑—é–º–µ': my_resume,
        '–í—Å–µ –†–µ–∑—é–º–µ': get_all_resume,
        '–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å': send_privacy,

    }
    data_admin = {
        '–û–±—ä—è–≤–ª–µ–Ω–∏—è –¥–ª—è –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏': get_all_announcement_for_adm,
        '–†–µ–∑—é–º–µ –¥–ª—è –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏': get_all_resume_for_adm,
        '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ü—Ä–æ–¥–∞–∂–∏': confirmation_of_sales,
        '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ê—Ä–µ–Ω–¥—ã': confirmation_of_rent,
        '–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å': get_all_feedback_for_adm,

    }
    await data.get(message.text, error)(message)
    await data_admin.get(message.text, error)(message)
