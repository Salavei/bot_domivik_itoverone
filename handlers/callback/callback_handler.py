from main import *
from aiogram import types


###–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–∏

@dp.callback_query_handler(lambda call: 'requests_an_' in call.data)
async def requests_an_user(call: types.CallbackQuery):
    #—Ç—É—Ç –±—É–¥–µ—Ç —Ç–æ, –∫—É–¥–∞ –±—É–¥–µ—Ç –∏–¥—Ç–∏ –∑–∞—è–≤–∫–∞
    await call.message.answer(text="–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞")

###–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –∏ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏—è
@dp.callback_query_handler(lambda call: 'rent_stop_start_an_' in call.data)
async def stop_start_an_rent_user(call: types.CallbackQuery):
    print(call.data.split('_')[-1])
    db.confirm_announcements_rent_user(call.data.split('_')[-1], not db.start_my_announcements_rent(call.data.split('_')[-1]))
    await call.message.edit_text(text="‚òëÔ∏è")


@dp.callback_query_handler(lambda call: 'stop_start_an_' in call.data)
async def stop_start_an_sell_user(call: types.CallbackQuery):
    print(call.data.split('_')[-1])
    db.confirm_announcements_sell_user(call.data.split('_')[-1], not db.start_my_announcements_sell(call.data.split('_')[-1]))
    await call.message.edit_text(text="‚òëÔ∏è")

#–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª—è–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏—è

@dp.callback_query_handler(lambda call: 'ddd_rent_dell_an_' in call.data)
async def user_an_rent_dell(call: types.CallbackQuery):
    db.dell_an_rent_user(call.data.split('_')[-1])
    await call.message.edit_text(text="‚òëÔ∏è–£–¥–∞–ª–µ–Ω–æ")

@dp.callback_query_handler(lambda call: 'ssssssdell_an_' in call.data)
async def user_an_sell_dell_sell(call: types.CallbackQuery):
    db.dell_an_sell_user(call.data.split('_')[-1])
    await call.message.edit_text(text="‚òëÔ∏è–£–¥–∞–ª–µ–Ω–æ")
######–ê–¥–º–∏–Ω —É–¥–∞–ª—è–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏—è
@dp.callback_query_handler(lambda call: 'dell_rent_admin_an_' in call.data)
async def admin_an_rent_dell(call: types.CallbackQuery):
    db.dell_an_rent_admin(call.data.split('_')[-1])
    await call.message.edit_text(text="‚òëÔ∏è–û—Ç–∫–ª–æ–Ω–µ–Ω–æ")

@dp.callback_query_handler(lambda call: 'an_admin_dell_' in call.data)
async def admin_an_sell_dell(call: types.CallbackQuery):
    db.dell_an_sell_admin(call.data.split('_')[-1])
    await call.message.edit_text(text="‚òëÔ∏è–û—Ç–∫–ª–æ–Ω–µ–Ω–æ")

#######–ê–¥–º–∏–Ω –æ–¥–æ–±—Ä—è–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏—è
@dp.callback_query_handler(lambda call: 'seeel_admin_start_an_' in call.data)
async def admin_start_an_sell(call: types.CallbackQuery):
    print('sell', call.data.split('_')[-1])
    db.confirm_announcements_sell_admin(call.data.split('_')[-1])
    await call.message.edit_text(text="‚òëÔ∏è–û–¥–æ–±—Ä–µ–Ω–æÔ∏è")

@dp.callback_query_handler(lambda call: 'rent_admin_start_an_' in call.data)
async def admin_start_an_rent(call: types.CallbackQuery):
    print('rent', call.data.split('_')[-1])
    db.confirm_announcements_rent_admin(call.data.split('_')[-1])
    await call.message.edit_text(text="‚òëÔ∏è–û–¥–æ–±—Ä–µ–Ω–æ")








# –í–∞–∫–∞–Ω—Å–∏–∏


@dp.callback_query_handler(lambda call: 'start_stop_' in call.data)
async def approve_start_end_my_resume(call: types.CallbackQuery):
    db.update__my_resume(call.data.split('_')[-1], not db.start_my_resume(call.data.split('_')[-1]))
    await call.message.edit_text(text="‚òëÔ∏è")


@dp.callback_query_handler(lambda call: 'stop_start_an_' in call.data)
async def approve_announcement_user(call: types.CallbackQuery):
    db.update_announcements(call.data.split('_')[-1], not db.check_announcements(call.data.split('_')[-1]))
    await call.message.edit_text(text="‚òëÔ∏è")


# ADMIN CALLBACK
@dp.callback_query_handler(lambda call: 'confirm_r_admin_' in call.data)
async def approve_resume_admin(call: types.CallbackQuery):
    db.confirm_resume_admin(call.data.split('_')[-1])
    await call.message.edit_text(text="–†–µ–∑—é–º–µ –æ–¥–æ–±—Ä–µ–Ω–æ üëç")


@dp.callback_query_handler(lambda call: 'reject_r_admin_' in call.data)
async def reject_resume_admin(call: types.CallbackQuery):
    db.reject_db_resume_admin(call.data.split('_')[-1])
    await call.message.edit_text(text='–†–µ–∑—é–º–µ –æ—Ç–∫–ª–∞–Ω–µ–Ω–æ üëé')

@dp.callback_query_handler(lambda call: 'confirm_a_admin_' in call.data)
async def approve_announcement_admin(call: types.CallbackQuery):
    db.confirm_announcements_admin(call.data.split('_')[-1])
    await call.message.edit_text(text="–û–±—ä—è–≤–ª–µ–Ω–∏–µ –æ–¥–æ–±—Ä–µ–Ω–æ üëç")


@dp.callback_query_handler(lambda call: 'reject_a_admin_' in call.data)
async def reject_announcement_admin(call: types.CallbackQuery):
    db.reject_db_announcement_admin(call.data.split('_')[-1])
    await call.message.edit_text(text="–û–±—ä—è–≤–ª–µ–Ω–∏–µ –æ—Ç–∫–ª–∞–Ω–µ–Ω–æ üëé")

##################################